name: "Main CI"
on:
  push:
    branches: ["main"]

permissions:
  contents: write
  id-token: write

env:
  GO_VERSION: 1.23
  APP_NAME: "hewpao-s-backend"

jobs:
  pre-test:
    name: "Pre-Test"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Setup Go"
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: "Run Tests"
        run: go test -v -cover ./usecase/

  build:
    name: "Build & Push Docker Image"
    runs-on: "ubuntu-latest"
    outputs:
      tag: ${{ steps.versioning.outputs.NEW_TAG }}
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Log in to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Generate Next Version Tag"
        id: versioning
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v0.1.0"
          else
            IFS='.' read -r -a VERSION_PARTS <<< "${LATEST_TAG#v}"
            NEW_TAG="v${VERSION_PARTS[0]}.$((VERSION_PARTS[1] + 1)).0"
          fi

          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV

      - name: "Build and Push Docker Image"
        run: |-
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${NEW_TAG}"

          docker build -f docker/prod.Dockerfile -t "${IMAGE_NAME}" .
          docker push "${IMAGE_NAME}"

  release:
    name: "Create GitHub Release"
    needs: build
    runs-on: "ubuntu-latest"
    env:
      NEW_TAG: ${{ needs.build.outputs.NEW_TAG }}
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Create and Push Git Tag"
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: "Create GitHub Release"
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.GH_PAT }}
          tag_name: ${{ env.NEW_TAG }}
          release_name: "Release ${{ env.NEW_TAG }}"
          draft: false
          prerelease: false
